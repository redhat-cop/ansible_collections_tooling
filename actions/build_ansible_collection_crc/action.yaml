---
name: Build and install ansible collection
description: Build and install ansible collection

inputs:
  collection_namespace:
    description: "Install collection python dependencies"
    required: true
  collection_name:
    description: "Path to the collection source"
    required: true
  collection_version:
    description: The final collection path
    required: false
  collection_repo:
    description: The collection url
    required: false
  ansible_ah_token:
    description: Token for pulling from automation hub
    required: true
outputs:
  tar_file:
    description: The collection tarball when built
    value: ${{ inputs.collection_namespace }}-${{ inputs.collection_name }}-${{ inputs.collection_version }}.tar.gz
  collection_path:
    description: The final collection path
    value: /home/runner/collections/ansible_collections/${{ inputs.collection_namespace }}/${{ inputs.collection_name }}

runs:
  using: composite
  steps:
    - name: template galaxy file
      run: ansible all -i 'localhost,' -c local -m template -a "src=.github/files/galaxy.yml.j2 dest=galaxy.yml" --extra-vars "collection_namespace=${{ inputs.collection_namespace }} collection_name=${{ inputs.collection_name }} collection_version=${{ inputs.collection_version }} collection_repo=${{ inputs.collection_repo }}"
      shell: bash

    - name: Build collection
      run: ansible-galaxy collection build -vvv
      shell: bash
      working-directory: ${{ inputs.source_path }}

    - name: Install collection
      run: ansible-galaxy collection install . -vvvv
      shell: bash
      working-directory: ${{ inputs.source_path }}
      env:
        ANSIBLE_GALAXY_SERVER_VALIDATED_URL: 'https://console.redhat.com/api/automation-hub/content/validated/'
        ANSIBLE_GALAXY_SERVER_VALIDATED_TOKEN: ${{ inputs.ansible_ah_token}}
        ANSIBLE_GALAXY_SERVER_VALIDATED_AUTH_URL: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
        ANSIBLE_GALAXY_SERVER_PUBLISHED_URL: 'https://console.redhat.com/api/automation-hub/content/published/'
        ANSIBLE_GALAXY_SERVER_PUBLISHED_TOKEN: ${{ inputs.ansible_ah_token }}
        ANSIBLE_GALAXY_SERVER_PUBLISHED_AUTH_URL: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
        ANSIBLE_GALAXY_SERVER_COMMUNITY_URL: 'https://galaxy.ansible.com/'
        ANSIBLE_GALAXY_SERVER_LIST: 'published, validated, community'
...
