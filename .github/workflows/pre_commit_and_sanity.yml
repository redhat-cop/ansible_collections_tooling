---
# This workflow action will run pre-commit, which will execute ansible and yaml linting
# See .pre-commit-config.yaml for what hooks are executed
name: pre-commit tests


on:
  workflow_call:
    inputs:
      collection_namespace:
        description: "Install collection python dependencies"
        required: true
        type: string
      collection_name:
        description: "Path to the collection source"
        required: true
        type: string
      collection_version:
        description: The final collection path
        required: false
        type: string
      collection_repo:
        description: The collection url
        required: false
        type: string
      collection_dependencies:
        description: The collection dependencies (as a space separated list)
        required: false
        type: string

jobs:
  pre-commit:
    uses: "redhat-cop/ansible_collections_tooling/.github/workflows/pre-commit.yml@main"
    with:
      collection_namespace: ${{ inputs.collection_namespace }}
      collection_name: ${{ inputs.collection_name }}
      collection_version: ${{ inputs.collection_version }}
      collection_repo: ${{ inputs.collection_repo }}
      collection_dependencies: ${{ inputs.collection_dependencies }}
  sanity:
    uses: "redhat-cop/ansible_collections_tooling/.github/workflows/sanity.yml@main"
    with:
      collection_namespace: ${{ inputs.collection_namespace }}
      collection_name: ${{ inputs.collection_name }}
      collection_version: ${{ inputs.collection_version }}
      collection_repo: ${{ inputs.collection_repo }}
      collection_dependencies: ${{ inputs.collection_dependencies }}
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        use-verbose-mode: 'yes'
        config-file: '.mlc_config.json'
  all_green:
    if: ${{ always() }}
    needs:
      - pre-commit
      - sanity
      - markdown-link-check
    runs-on: ubuntu-latest
    steps:
      - run: >-
          python -c "assert set([
          '${{ needs.pre-commit.result }}',
          '${{ needs.sanity.result }}',
          ]) == {'success'}"
...
